# NetHunter Pro Plymouth Boot Theme Script

# Set up the background
Window.SetBackgroundTopColor(0, 0, 0);    # Black
Window.SetBackgroundBottomColor(0, 0, 0); # Black

# Load NetHunter logo (you'll need to provide this image)
logo.image = Image("nethunter-logo.png");
logo.sprite = Sprite(logo.image);
logo.sprite.SetX(Window.GetWidth() / 2 - logo.image.GetWidth() / 2);
logo.sprite.SetY(Window.GetHeight() / 2 - logo.image.GetHeight() / 2 - 50);

# Progress bar setup
progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);
progress_box.sprite.SetX(Window.GetWidth() / 2 - progress_box.image.GetWidth() / 2);
progress_box.sprite.SetY(Window.GetHeight() / 2 + logo.image.GetHeight() / 2 + 20);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite();
progress_bar.sprite.SetX(Window.GetWidth() / 2 - progress_bar.original_image.GetWidth() / 2);
progress_bar.sprite.SetY(Window.GetHeight() / 2 + logo.image.GetHeight() / 2 + 20);

# Text setup
Plymouth.SetFont("Ubuntu 12");

# Boot progress function
fun boot_progress_cb(duration, progress) {
    if (progress_bar.original_image.GetWidth() > 0) {
        progress_bar.image = progress_bar.original_image.Scale(
            progress_bar.original_image.GetWidth() * progress,
            progress_bar.original_image.GetHeight()
        );
        progress_bar.sprite.SetImage(progress_bar.image);
    }
}

Plymouth.SetBootProgressFunction(boot_progress_cb);

# Message display
message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun display_normal_callback() {
    global.status = "normal";
    if (global.message_text) {
        text_image = Image.Text(global.message_text, 0, 1, 0); # Green text
        message_sprite.SetImage(text_image);
    } else {
        message_sprite = Sprite();
    }
}

fun display_password_callback(prompt, bullets) {
    global.status = "password";
    bullet_image = Image.Text("â€¢", 0, 1, 0);
    prompt_image = Image.Text(prompt, 0, 1, 0);
    
    bullet_width = bullet_image.GetWidth();
    prompt_width = prompt_image.GetWidth();
    
    # Display prompt
    message_sprite.SetImage(prompt_image);
    
    # Display bullets
    for (index = 0; index < bullets; index++) {
        bullet_sprite = Sprite(bullet_image);
        bullet_sprite.SetX(prompt_width + index * bullet_width);
        bullet_sprite.SetY(message_sprite.GetY());
    }
}

fun display_message_callback(text) {
    global.message_text = text;
    if (global.status == "normal") {
        text_image = Image.Text(text, 0, 1, 0); # Green text
        message_sprite.SetImage(text_image);
    }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);
Plymouth.SetMessageFunction(display_message_callback);